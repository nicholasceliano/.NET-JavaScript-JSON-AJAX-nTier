//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18047.
// 
#pragma warning disable 1591

namespace GHGPortal.Web.com.ihess.DocManager {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DocManagerWebServicesSoap", Namespace="http://tempuri.org//DocManagerWebServices")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TrackingDetailUploadHistoryItemBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfirmTrackingHeaderItemBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfirmTrackingDetailItemBase))]
    public partial class DocManagerWebServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetFileByConfirmTrackingDetailItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddConfirmTrackingDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmTrackingDetailGetCountByDocStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FilterContractsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentDetailsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DocManagerWebServices() {
            this.Url = global::GHGPortal.Web.Properties.Settings.Default.GHGPortal_Web_com_ihess_DocManager_DocManagerWebServices;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetFileByConfirmTrackingDetailItemCompletedEventHandler GetFileByConfirmTrackingDetailItemCompleted;
        
        /// <remarks/>
        public event SetCompleteCompletedEventHandler SetCompleteCompleted;
        
        /// <remarks/>
        public event AddConfirmTrackingDetailCompletedEventHandler AddConfirmTrackingDetailCompleted;
        
        /// <remarks/>
        public event ConfirmTrackingDetailGetCountByDocStatusCompletedEventHandler ConfirmTrackingDetailGetCountByDocStatusCompleted;
        
        /// <remarks/>
        public event FilterContractsCompletedEventHandler FilterContractsCompleted;
        
        /// <remarks/>
        public event GetDocumentDetailsCompletedEventHandler GetDocumentDetailsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org//DocManagerWebServices/GetFileByConfirmTrackingDetailItem", RequestNamespace="http://tempuri.org//DocManagerWebServices", ResponseNamespace="http://tempuri.org//DocManagerWebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DocAndTrackingDetailID[] GetFileByConfirmTrackingDetailItem(string TempestDealID, string OurReference, string TheirReference, string Strategy, string Counterparty, string DocGroup, string DocType, string Status, string Reason) {
            object[] results = this.Invoke("GetFileByConfirmTrackingDetailItem", new object[] {
                        TempestDealID,
                        OurReference,
                        TheirReference,
                        Strategy,
                        Counterparty,
                        DocGroup,
                        DocType,
                        Status,
                        Reason});
            return ((DocAndTrackingDetailID[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFileByConfirmTrackingDetailItemAsync(string TempestDealID, string OurReference, string TheirReference, string Strategy, string Counterparty, string DocGroup, string DocType, string Status, string Reason) {
            this.GetFileByConfirmTrackingDetailItemAsync(TempestDealID, OurReference, TheirReference, Strategy, Counterparty, DocGroup, DocType, Status, Reason, null);
        }
        
        /// <remarks/>
        public void GetFileByConfirmTrackingDetailItemAsync(string TempestDealID, string OurReference, string TheirReference, string Strategy, string Counterparty, string DocGroup, string DocType, string Status, string Reason, object userState) {
            if ((this.GetFileByConfirmTrackingDetailItemOperationCompleted == null)) {
                this.GetFileByConfirmTrackingDetailItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileByConfirmTrackingDetailItemOperationCompleted);
            }
            this.InvokeAsync("GetFileByConfirmTrackingDetailItem", new object[] {
                        TempestDealID,
                        OurReference,
                        TheirReference,
                        Strategy,
                        Counterparty,
                        DocGroup,
                        DocType,
                        Status,
                        Reason}, this.GetFileByConfirmTrackingDetailItemOperationCompleted, userState);
        }
        
        private void OnGetFileByConfirmTrackingDetailItemOperationCompleted(object arg) {
            if ((this.GetFileByConfirmTrackingDetailItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileByConfirmTrackingDetailItemCompleted(this, new GetFileByConfirmTrackingDetailItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org//DocManagerWebServices/SetComplete", RequestNamespace="http://tempuri.org//DocManagerWebServices", ResponseNamespace="http://tempuri.org//DocManagerWebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetComplete(int ConfirmTrackingDetailID, string DocType, string Status, string Reason) {
            object[] results = this.Invoke("SetComplete", new object[] {
                        ConfirmTrackingDetailID,
                        DocType,
                        Status,
                        Reason});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetCompleteAsync(int ConfirmTrackingDetailID, string DocType, string Status, string Reason) {
            this.SetCompleteAsync(ConfirmTrackingDetailID, DocType, Status, Reason, null);
        }
        
        /// <remarks/>
        public void SetCompleteAsync(int ConfirmTrackingDetailID, string DocType, string Status, string Reason, object userState) {
            if ((this.SetCompleteOperationCompleted == null)) {
                this.SetCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCompleteOperationCompleted);
            }
            this.InvokeAsync("SetComplete", new object[] {
                        ConfirmTrackingDetailID,
                        DocType,
                        Status,
                        Reason}, this.SetCompleteOperationCompleted, userState);
        }
        
        private void OnSetCompleteOperationCompleted(object arg) {
            if ((this.SetCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCompleteCompleted(this, new SetCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org//DocManagerWebServices/AddConfirmTrackingDetail", RequestNamespace="http://tempuri.org//DocManagerWebServices", ResponseNamespace="http://tempuri.org//DocManagerWebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddConfirmTrackingDetail(string TempestDealID, string OurReference, string TheirReference, string Strategy, string Counterparty, string DocGroup, string DocType, string Status, string Reason, string Notes, string UserID) {
            object[] results = this.Invoke("AddConfirmTrackingDetail", new object[] {
                        TempestDealID,
                        OurReference,
                        TheirReference,
                        Strategy,
                        Counterparty,
                        DocGroup,
                        DocType,
                        Status,
                        Reason,
                        Notes,
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddConfirmTrackingDetailAsync(string TempestDealID, string OurReference, string TheirReference, string Strategy, string Counterparty, string DocGroup, string DocType, string Status, string Reason, string Notes, string UserID) {
            this.AddConfirmTrackingDetailAsync(TempestDealID, OurReference, TheirReference, Strategy, Counterparty, DocGroup, DocType, Status, Reason, Notes, UserID, null);
        }
        
        /// <remarks/>
        public void AddConfirmTrackingDetailAsync(string TempestDealID, string OurReference, string TheirReference, string Strategy, string Counterparty, string DocGroup, string DocType, string Status, string Reason, string Notes, string UserID, object userState) {
            if ((this.AddConfirmTrackingDetailOperationCompleted == null)) {
                this.AddConfirmTrackingDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddConfirmTrackingDetailOperationCompleted);
            }
            this.InvokeAsync("AddConfirmTrackingDetail", new object[] {
                        TempestDealID,
                        OurReference,
                        TheirReference,
                        Strategy,
                        Counterparty,
                        DocGroup,
                        DocType,
                        Status,
                        Reason,
                        Notes,
                        UserID}, this.AddConfirmTrackingDetailOperationCompleted, userState);
        }
        
        private void OnAddConfirmTrackingDetailOperationCompleted(object arg) {
            if ((this.AddConfirmTrackingDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddConfirmTrackingDetailCompleted(this, new AddConfirmTrackingDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org//DocManagerWebServices/ConfirmTrackingDetailGetCountByDocStatu" +
            "s", RequestNamespace="http://tempuri.org//DocManagerWebServices", ResponseNamespace="http://tempuri.org//DocManagerWebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ConfirmTrackingDetailGetCountByDocStatus(string TempestDealID, string OurReference, string TheirReference, string Strategy, string Counterparty, string DocGroup, string DocType, string Status, string Reason) {
            object[] results = this.Invoke("ConfirmTrackingDetailGetCountByDocStatus", new object[] {
                        TempestDealID,
                        OurReference,
                        TheirReference,
                        Strategy,
                        Counterparty,
                        DocGroup,
                        DocType,
                        Status,
                        Reason});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmTrackingDetailGetCountByDocStatusAsync(string TempestDealID, string OurReference, string TheirReference, string Strategy, string Counterparty, string DocGroup, string DocType, string Status, string Reason) {
            this.ConfirmTrackingDetailGetCountByDocStatusAsync(TempestDealID, OurReference, TheirReference, Strategy, Counterparty, DocGroup, DocType, Status, Reason, null);
        }
        
        /// <remarks/>
        public void ConfirmTrackingDetailGetCountByDocStatusAsync(string TempestDealID, string OurReference, string TheirReference, string Strategy, string Counterparty, string DocGroup, string DocType, string Status, string Reason, object userState) {
            if ((this.ConfirmTrackingDetailGetCountByDocStatusOperationCompleted == null)) {
                this.ConfirmTrackingDetailGetCountByDocStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmTrackingDetailGetCountByDocStatusOperationCompleted);
            }
            this.InvokeAsync("ConfirmTrackingDetailGetCountByDocStatus", new object[] {
                        TempestDealID,
                        OurReference,
                        TheirReference,
                        Strategy,
                        Counterparty,
                        DocGroup,
                        DocType,
                        Status,
                        Reason}, this.ConfirmTrackingDetailGetCountByDocStatusOperationCompleted, userState);
        }
        
        private void OnConfirmTrackingDetailGetCountByDocStatusOperationCompleted(object arg) {
            if ((this.ConfirmTrackingDetailGetCountByDocStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmTrackingDetailGetCountByDocStatusCompleted(this, new ConfirmTrackingDetailGetCountByDocStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org//DocManagerWebServices/FilterContracts", RequestNamespace="http://tempuri.org//DocManagerWebServices", ResponseNamespace="http://tempuri.org//DocManagerWebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ContractDetailItem[] FilterContracts(string documentGroup, string tempestDealIds) {
            object[] results = this.Invoke("FilterContracts", new object[] {
                        documentGroup,
                        tempestDealIds});
            return ((ContractDetailItem[])(results[0]));
        }
        
        /// <remarks/>
        public void FilterContractsAsync(string documentGroup, string tempestDealIds) {
            this.FilterContractsAsync(documentGroup, tempestDealIds, null);
        }
        
        /// <remarks/>
        public void FilterContractsAsync(string documentGroup, string tempestDealIds, object userState) {
            if ((this.FilterContractsOperationCompleted == null)) {
                this.FilterContractsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFilterContractsOperationCompleted);
            }
            this.InvokeAsync("FilterContracts", new object[] {
                        documentGroup,
                        tempestDealIds}, this.FilterContractsOperationCompleted, userState);
        }
        
        private void OnFilterContractsOperationCompleted(object arg) {
            if ((this.FilterContractsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FilterContractsCompleted(this, new FilterContractsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org//DocManagerWebServices/GetDocumentDetails", RequestNamespace="http://tempuri.org//DocManagerWebServices", ResponseNamespace="http://tempuri.org//DocManagerWebServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ConfirmTrackingDetailItem[] GetDocumentDetails(string dealId, string ourReference, string theirReference, string strategy, string counterParty, string docGroup, string docType, string status, string reason) {
            object[] results = this.Invoke("GetDocumentDetails", new object[] {
                        dealId,
                        ourReference,
                        theirReference,
                        strategy,
                        counterParty,
                        docGroup,
                        docType,
                        status,
                        reason});
            return ((ConfirmTrackingDetailItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentDetailsAsync(string dealId, string ourReference, string theirReference, string strategy, string counterParty, string docGroup, string docType, string status, string reason) {
            this.GetDocumentDetailsAsync(dealId, ourReference, theirReference, strategy, counterParty, docGroup, docType, status, reason, null);
        }
        
        /// <remarks/>
        public void GetDocumentDetailsAsync(string dealId, string ourReference, string theirReference, string strategy, string counterParty, string docGroup, string docType, string status, string reason, object userState) {
            if ((this.GetDocumentDetailsOperationCompleted == null)) {
                this.GetDocumentDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentDetailsOperationCompleted);
            }
            this.InvokeAsync("GetDocumentDetails", new object[] {
                        dealId,
                        ourReference,
                        theirReference,
                        strategy,
                        counterParty,
                        docGroup,
                        docType,
                        status,
                        reason}, this.GetDocumentDetailsOperationCompleted, userState);
        }
        
        private void OnGetDocumentDetailsOperationCompleted(object arg) {
            if ((this.GetDocumentDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentDetailsCompleted(this, new GetDocumentDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stt2.ihess.com/Contrack/DocManagerWebService")]
    public partial class DocAndTrackingDetailID {
        
        private int _TrackingDetailIDField;
        
        private string _FilePathField;
        
        private DocImage _DocImageField;
        
        private string _ErrorMessageField;
        
        /// <remarks/>
        public int _TrackingDetailID {
            get {
                return this._TrackingDetailIDField;
            }
            set {
                this._TrackingDetailIDField = value;
            }
        }
        
        /// <remarks/>
        public string _FilePath {
            get {
                return this._FilePathField;
            }
            set {
                this._FilePathField = value;
            }
        }
        
        /// <remarks/>
        public DocImage _DocImage {
            get {
                return this._DocImageField;
            }
            set {
                this._DocImageField = value;
            }
        }
        
        /// <remarks/>
        public string _ErrorMessage {
            get {
                return this._ErrorMessageField;
            }
            set {
                this._ErrorMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://stt2.ihess.com/Contrack/DocManagerWebService")]
    public partial class DocImage {
        
        private string errorMessageField;
        
        private byte[] fileBytesField;
        
        /// <remarks/>
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] FileBytes {
            get {
                return this.fileBytesField;
            }
            set {
                this.fileBytesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TrackingDetailUploadHistoryItem))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org//DocManagerWebServices")]
    public abstract partial class TrackingDetailUploadHistoryItemBase {
        
        private int idField;
        
        private int trackingDetailIdField;
        
        private System.DateTime uploadAttemptedOnField;
        
        private bool successfulField;
        
        private string filenameField;
        
        private System.DateTime fileCreationTimeField;
        
        private string tempestDealIdField;
        
        private string ourReferenceField;
        
        private string theirReferenceField;
        
        private string strategyField;
        
        private string counterPartyField;
        
        private bool obsoleteField;
        
        private System.DateTime agreementDateField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int TrackingDetailId {
            get {
                return this.trackingDetailIdField;
            }
            set {
                this.trackingDetailIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UploadAttemptedOn {
            get {
                return this.uploadAttemptedOnField;
            }
            set {
                this.uploadAttemptedOnField = value;
            }
        }
        
        /// <remarks/>
        public bool Successful {
            get {
                return this.successfulField;
            }
            set {
                this.successfulField = value;
            }
        }
        
        /// <remarks/>
        public string Filename {
            get {
                return this.filenameField;
            }
            set {
                this.filenameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime FileCreationTime {
            get {
                return this.fileCreationTimeField;
            }
            set {
                this.fileCreationTimeField = value;
            }
        }
        
        /// <remarks/>
        public string TempestDealId {
            get {
                return this.tempestDealIdField;
            }
            set {
                this.tempestDealIdField = value;
            }
        }
        
        /// <remarks/>
        public string OurReference {
            get {
                return this.ourReferenceField;
            }
            set {
                this.ourReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string TheirReference {
            get {
                return this.theirReferenceField;
            }
            set {
                this.theirReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string Strategy {
            get {
                return this.strategyField;
            }
            set {
                this.strategyField = value;
            }
        }
        
        /// <remarks/>
        public string CounterParty {
            get {
                return this.counterPartyField;
            }
            set {
                this.counterPartyField = value;
            }
        }
        
        /// <remarks/>
        public bool Obsolete {
            get {
                return this.obsoleteField;
            }
            set {
                this.obsoleteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AgreementDate {
            get {
                return this.agreementDateField;
            }
            set {
                this.agreementDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org//DocManagerWebServices")]
    public partial class TrackingDetailUploadHistoryItem : TrackingDetailUploadHistoryItemBase {
        
        private string createdByField;
        
        private int headerIdField;
        
        private System.DateTime assignmentDateField;
        
        private string docTypeField;
        
        private string statusField;
        
        private string reasonField;
        
        private string notesField;
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public int HeaderId {
            get {
                return this.headerIdField;
            }
            set {
                this.headerIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AssignmentDate {
            get {
                return this.assignmentDateField;
            }
            set {
                this.assignmentDateField = value;
            }
        }
        
        /// <remarks/>
        public string DocType {
            get {
                return this.docTypeField;
            }
            set {
                this.docTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfirmTrackingHeaderItem))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org//DocManagerWebServices")]
    public abstract partial class ConfirmTrackingHeaderItemBase {
        
        private int idField;
        
        private string tempestDealIdField;
        
        private string ourReferenceField;
        
        private string theirReferenceField;
        
        private string strategyField;
        
        private string counterpartyField;
        
        private string docGroupField;
        
        private System.DateTime createdOnField;
        
        private string createdByField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string TempestDealId {
            get {
                return this.tempestDealIdField;
            }
            set {
                this.tempestDealIdField = value;
            }
        }
        
        /// <remarks/>
        public string OurReference {
            get {
                return this.ourReferenceField;
            }
            set {
                this.ourReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string TheirReference {
            get {
                return this.theirReferenceField;
            }
            set {
                this.theirReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string Strategy {
            get {
                return this.strategyField;
            }
            set {
                this.strategyField = value;
            }
        }
        
        /// <remarks/>
        public string Counterparty {
            get {
                return this.counterpartyField;
            }
            set {
                this.counterpartyField = value;
            }
        }
        
        /// <remarks/>
        public string DocGroup {
            get {
                return this.docGroupField;
            }
            set {
                this.docGroupField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org//DocManagerWebServices")]
    public partial class ConfirmTrackingHeaderItem : ConfirmTrackingHeaderItemBase {
        
        private IssueStatuses issueStatusField;
        
        private string dealDateField;
        
        private System.DateTime lastActivityDateField;
        
        /// <remarks/>
        public IssueStatuses IssueStatus {
            get {
                return this.issueStatusField;
            }
            set {
                this.issueStatusField = value;
            }
        }
        
        /// <remarks/>
        public string DealDate {
            get {
                return this.dealDateField;
            }
            set {
                this.dealDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastActivityDate {
            get {
                return this.lastActivityDateField;
            }
            set {
                this.lastActivityDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org//DocManagerWebServices")]
    public enum IssueStatuses {
        
        /// <remarks/>
        Resolved,
        
        /// <remarks/>
        Unresolved,
        
        /// <remarks/>
        Empty,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConfirmTrackingDetailItem))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org//DocManagerWebServices")]
    public abstract partial class ConfirmTrackingDetailItemBase {
        
        private int idField;
        
        private int headerIdField;
        
        private string docTypeField;
        
        private string sourceField;
        
        private string statusField;
        
        private string reasonField;
        
        private string notesField;
        
        private System.DateTime createdOnField;
        
        private string createdByField;
        
        private string confirmFilenameField;
        
        private bool lastUploadAttemptField;
        
        private bool obsoleteField;
        
        private System.DateTime agreementDateField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int HeaderId {
            get {
                return this.headerIdField;
            }
            set {
                this.headerIdField = value;
            }
        }
        
        /// <remarks/>
        public string DocType {
            get {
                return this.docTypeField;
            }
            set {
                this.docTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Source {
            get {
                return this.sourceField;
            }
            set {
                this.sourceField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
        
        /// <remarks/>
        public string Notes {
            get {
                return this.notesField;
            }
            set {
                this.notesField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        public string CreatedBy {
            get {
                return this.createdByField;
            }
            set {
                this.createdByField = value;
            }
        }
        
        /// <remarks/>
        public string ConfirmFilename {
            get {
                return this.confirmFilenameField;
            }
            set {
                this.confirmFilenameField = value;
            }
        }
        
        /// <remarks/>
        public bool LastUploadAttempt {
            get {
                return this.lastUploadAttemptField;
            }
            set {
                this.lastUploadAttemptField = value;
            }
        }
        
        /// <remarks/>
        public bool Obsolete {
            get {
                return this.obsoleteField;
            }
            set {
                this.obsoleteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime AgreementDate {
            get {
                return this.agreementDateField;
            }
            set {
                this.agreementDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org//DocManagerWebServices")]
    public partial class ConfirmTrackingDetailItem : ConfirmTrackingDetailItemBase {
        
        private string headerKeyField;
        
        private string filePathField;
        
        private ConfirmTrackingHeaderItem trackingHeaderField;
        
        private TrackingDetailUploadHistoryItem[] uploadsField;
        
        /// <remarks/>
        public string HeaderKey {
            get {
                return this.headerKeyField;
            }
            set {
                this.headerKeyField = value;
            }
        }
        
        /// <remarks/>
        public string FilePath {
            get {
                return this.filePathField;
            }
            set {
                this.filePathField = value;
            }
        }
        
        /// <remarks/>
        public ConfirmTrackingHeaderItem TrackingHeader {
            get {
                return this.trackingHeaderField;
            }
            set {
                this.trackingHeaderField = value;
            }
        }
        
        /// <remarks/>
        public TrackingDetailUploadHistoryItem[] Uploads {
            get {
                return this.uploadsField;
            }
            set {
                this.uploadsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org//DocManagerWebServices")]
    public partial class ContractDetailItem {
        
        private int dateDifferenceField;
        
        private DisplayKey displayCodeField;
        
        private int contractNumField;
        
        private string strategyField;
        
        private string ourReferenceField;
        
        private string theirReferenceField;
        
        private System.DateTime contractDateField;
        
        private string companyField;
        
        private string internalCompanyField;
        
        private string companyTypeField;
        
        private string contactEmailAddressField;
        
        private System.DateTime createDateField;
        
        private string businessUnitField;
        
        private string tradeTypeField;
        
        private string buySellField;
        
        private string productField;
        
        private string priceField;
        
        private string priceUnitField;
        
        private string volumeField;
        
        private string volumeUnitField;
        
        private string locationUdfField;
        
        private string locationTradeField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private System.DateTime transmittedDateField;
        
        private int headerIdField;
        
        private int idField;
        
        private IssueStatuses issueStatusField;
        
        private string issueUserField;
        
        private string issueResponsibleField;
        
        private string issueStatusDescriptionField;
        
        private string issueNoteField;
        
        private System.DateTime lastModifiedDateField;
        
        private System.DateTime lastCpFollowupLetterSentDateField;
        
        /// <remarks/>
        public int dateDifference {
            get {
                return this.dateDifferenceField;
            }
            set {
                this.dateDifferenceField = value;
            }
        }
        
        /// <remarks/>
        public DisplayKey displayCode {
            get {
                return this.displayCodeField;
            }
            set {
                this.displayCodeField = value;
            }
        }
        
        /// <remarks/>
        public int contractNum {
            get {
                return this.contractNumField;
            }
            set {
                this.contractNumField = value;
            }
        }
        
        /// <remarks/>
        public string strategy {
            get {
                return this.strategyField;
            }
            set {
                this.strategyField = value;
            }
        }
        
        /// <remarks/>
        public string ourReference {
            get {
                return this.ourReferenceField;
            }
            set {
                this.ourReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string theirReference {
            get {
                return this.theirReferenceField;
            }
            set {
                this.theirReferenceField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime contractDate {
            get {
                return this.contractDateField;
            }
            set {
                this.contractDateField = value;
            }
        }
        
        /// <remarks/>
        public string company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string internalCompany {
            get {
                return this.internalCompanyField;
            }
            set {
                this.internalCompanyField = value;
            }
        }
        
        /// <remarks/>
        public string companyType {
            get {
                return this.companyTypeField;
            }
            set {
                this.companyTypeField = value;
            }
        }
        
        /// <remarks/>
        public string contactEmailAddress {
            get {
                return this.contactEmailAddressField;
            }
            set {
                this.contactEmailAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime createDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        public string businessUnit {
            get {
                return this.businessUnitField;
            }
            set {
                this.businessUnitField = value;
            }
        }
        
        /// <remarks/>
        public string tradeType {
            get {
                return this.tradeTypeField;
            }
            set {
                this.tradeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string buySell {
            get {
                return this.buySellField;
            }
            set {
                this.buySellField = value;
            }
        }
        
        /// <remarks/>
        public string product {
            get {
                return this.productField;
            }
            set {
                this.productField = value;
            }
        }
        
        /// <remarks/>
        public string price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public string priceUnit {
            get {
                return this.priceUnitField;
            }
            set {
                this.priceUnitField = value;
            }
        }
        
        /// <remarks/>
        public string volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        public string volumeUnit {
            get {
                return this.volumeUnitField;
            }
            set {
                this.volumeUnitField = value;
            }
        }
        
        /// <remarks/>
        public string locationUdf {
            get {
                return this.locationUdfField;
            }
            set {
                this.locationUdfField = value;
            }
        }
        
        /// <remarks/>
        public string locationTrade {
            get {
                return this.locationTradeField;
            }
            set {
                this.locationTradeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime endDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime transmittedDate {
            get {
                return this.transmittedDateField;
            }
            set {
                this.transmittedDateField = value;
            }
        }
        
        /// <remarks/>
        public int headerId {
            get {
                return this.headerIdField;
            }
            set {
                this.headerIdField = value;
            }
        }
        
        /// <remarks/>
        public int id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public IssueStatuses issueStatus {
            get {
                return this.issueStatusField;
            }
            set {
                this.issueStatusField = value;
            }
        }
        
        /// <remarks/>
        public string issueUser {
            get {
                return this.issueUserField;
            }
            set {
                this.issueUserField = value;
            }
        }
        
        /// <remarks/>
        public string issueResponsible {
            get {
                return this.issueResponsibleField;
            }
            set {
                this.issueResponsibleField = value;
            }
        }
        
        /// <remarks/>
        public string issueStatusDescription {
            get {
                return this.issueStatusDescriptionField;
            }
            set {
                this.issueStatusDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string issueNote {
            get {
                return this.issueNoteField;
            }
            set {
                this.issueNoteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime lastModifiedDate {
            get {
                return this.lastModifiedDateField;
            }
            set {
                this.lastModifiedDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastCpFollowupLetterSentDate {
            get {
                return this.lastCpFollowupLetterSentDateField;
            }
            set {
                this.lastCpFollowupLetterSentDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18047")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org//DocManagerWebServices")]
    public enum DisplayKey {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Inbound,
        
        /// <remarks/>
        Outbound,
        
        /// <remarks/>
        Both,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFileByConfirmTrackingDetailItemCompletedEventHandler(object sender, GetFileByConfirmTrackingDetailItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileByConfirmTrackingDetailItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFileByConfirmTrackingDetailItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocAndTrackingDetailID[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocAndTrackingDetailID[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SetCompleteCompletedEventHandler(object sender, SetCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddConfirmTrackingDetailCompletedEventHandler(object sender, AddConfirmTrackingDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddConfirmTrackingDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddConfirmTrackingDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ConfirmTrackingDetailGetCountByDocStatusCompletedEventHandler(object sender, ConfirmTrackingDetailGetCountByDocStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmTrackingDetailGetCountByDocStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmTrackingDetailGetCountByDocStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void FilterContractsCompletedEventHandler(object sender, FilterContractsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FilterContractsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FilterContractsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ContractDetailItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ContractDetailItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetDocumentDetailsCompletedEventHandler(object sender, GetDocumentDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConfirmTrackingDetailItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConfirmTrackingDetailItem[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591